@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicCapManager" as LogicCapManager LOGIC_COLOR
participant ":CapLogParser" as CapLogParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant ":DeleteCommand" as DeleteCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "module:Module" as Module MODEL_COLOR
participant "moduleCode:ModuleCode" as ModuleCode MODEL_COLOR
end box

[-> LogicCapManager : execute("delete CS2103")
activate LogicCapManager

LogicCapManager -> CapLogParser : parseCommand("delete CS2103")
activate CapLogParser

create DeleteCommandParser
CapLogParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> CapLogParser
deactivate DeleteCommandParser

CapLogParser -> DeleteCommandParser : parse("delete CS2103")
activate DeleteCommandParser

create ParserUtil
DeleteCommandParser -> ParserUtil : parseModuleCode("delete CS2103")
activate ParserUtil

ParserUtil --> DeleteCommandParser
deactivate ParserUtil

create ModuleCode
DeleteCommandParser -> ModuleCode : new ModuleCode("CS2103")
activate ModuleCode

ModuleCode -> ModuleCode : isValidModuleCode()
activate ModuleCode

ModuleCode --> ModuleCode
deactivate ModuleCode

ModuleCode --> DeleteCommandParser : moduleCode
deactivate ModuleCode

create DeleteCommand
DeleteCommandParser -> DeleteCommand : new DeleteCommand(moduleCode)
activate DeleteCommand

DeleteCommand --> DeleteCommandParser
deactivate DeleteCommand

DeleteCommandParser --> CapLogParser
deactivate  DeleteCommandParser

CapLogParser --> LogicCapManager
deactivate CapLogParser

destroy DeleteCommandParser

LogicCapManager -> DeleteCommand : execute()
activate DeleteCommand

DeleteCommand -> Model
activate Model

Model --> DeleteCommand

loop until match or no match for all
DeleteCommand -> Module
activate Module

Module -> ModuleCode
activate ModuleCode

ModuleCode --> Module
deactivate ModuleCode

Module --> DeleteCommand
deactivate Module

end

DeleteCommand -> Model

DeleteCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

LogicCapManager <-- DeleteCommand : result

[<-- LogicCapManager

@enduml
