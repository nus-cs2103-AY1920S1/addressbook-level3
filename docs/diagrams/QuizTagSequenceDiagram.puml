@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":FlashcardListParser" as FlashcardListParser LOGIC_COLOR
participant ":QuizTagCommandParser" as QuizTagCommandParser LOGIC_COLOR
participant "nextQuizCommand:QuizTagCommand" as QuizTagCommand LOGIC_COLOR
participant "cr:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR

end box

[-> FlashcardListParser: parseCommand(quiztag ...)
activate FlashcardListParser

FlashcardListParser -> FlashcardListParser: setQuizMode(true)
activate FlashcardListParser

deactivate FlashcardListParser

FlashcardListParser -> QuizTagCommandParser : parse(arguments)
activate QuizTagCommandParser

create QuizTagCommand
QuizTagCommandParser -> QuizTagCommand
activate QuizTagCommand

QuizTagCommand --> QuizTagCommandParser : nextQuizCommand
deactivate QuizTagCommand

QuizTagCommandParser --> FlashcardListParser : nextQuizCommand
deactivate QuizTagCommandParser


deactivate FlashcardListParser

[-> QuizTagCommand: execute()
activate QuizTagCommand

QuizTagCommand -> Model:getFilteredFlashcardList(model.getHasTagPredicate(target))
activate Model

Model --> QuizTagCommand: filteredList: ObservableList<Flashcard>
deactivate Model

QuizTagCommand -> Model : setQuiz(filteredList)
activate Model

Model --> QuizTagCommand
deactivate Model

QuizTagCommand -> Model: getQuiz().quizCard()
activate Model

Model -> QuizTagCommand: quizCard
deactivate Model

create CommandResult
QuizTagCommand -> CommandResult: quizCard
activate CommandResult

CommandResult --> QuizTagCommand : cr
deactivate CommandResult

[<-- QuizTagCommand : cr
deactivate QuizTagCommand


@enduml
