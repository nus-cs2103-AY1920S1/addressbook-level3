@startuml
!include style.puml

box UI UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
participant ":CommandBox" as CommandBox UI_COLOR
participant ":ResultDisplay" as ResultDisplay UI_COLOR
end box


box Logic LOGIC_COLOR_T1
participant ":Logic" as Logic LOGIC_COLOR
participant ":AlfredParser" as AlfredParser LOGIC_COLOR
participant ":AssignCommandAllocator" as AssignCommandAllocator LOGIC_COLOR
participant ":AssignParticipantCommandParser" as AssignParticipantCommandParser LOGIC_COLOR
participant "command:AssignParticipantCommand" as AssignParticipantCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box


[-> MainWindow :'assign participant P-100 T-2'
activate LogicManager

MainWindow -> CommandBox : handleCommandEntered()
activate CommandBox

CommandBox -> Logic : execute("assign participant P-100 T-2")
activate Logic

Logic -> AlfredParser : parseCommand("assign participant P-100 T-2")
activate AlfredParser

create AssignCommandAllocator
AlfredParser -> AssignCommandAllocator
activate AssignCommandAllocator

AssignCommandAllocator --> AlfredParser
deactivate AssignCommandAllocator

AlfredParser -> AssignCommandAllocator : allocate("participant P-100 T-2")
activate AssignCommandAllocator

create AssignParticipantCommandParser
AssignCommandAllocator -> AssignParticipantCommandParser
activate AssignParticipantCommandParser

AssignParticipantCommandParser --> AssignCommandAllocator
deactivate AssignParticipantCommandParser

AssignCommandAllocator -> AssignParticipantCommandParser : parse("P-100 T-2")
activate AssignParticipantCommandParser

create AssignParticipantCommand
AssignParticipantCommandParser -> AssignParticipantCommand
activate AssignParticipantCommand

AssignParticipantCommand --> AssignParticipantCommandParser : c
deactivate AssignParticipantCommand

AssignParticipantCommandParser --> AssignCommandAllocator : c
deactivate AssignParticipantCommandParser

AssignCommandAllocator --> AlfredParser : c
deactivate AssignCommandAllocator

AlfredParser --> Logic : c
deactivate AlfredParser


Logic -> AssignParticipantCommand : execute()
activate AssignParticipantCommand

AssignParticipantCommand -> Model
activate Model


Model --> AssignParticipantCommand
deactivate Model

AssignParticipantCommand --> Logic : commandResult
deactivate AssignCommand

Logic --> CommandBox : commandResult
deactivate Logic

CommandBox --> MainWindow
deactivate CommandBox

MainWindow -> ResultDisplay : setFeedBackToUser(CommandResult)
activate ResultDisplay

ResultDisplay --> MainWindow
deactivate ResultDisplay




[<--MainWindow
deactivate MainWindow
@enduml
