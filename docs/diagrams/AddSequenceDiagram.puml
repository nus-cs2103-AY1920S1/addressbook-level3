@startuml
!include style.puml
box Logic LOGIC_COLOR_T1
	participant ":LogicManager" LOGIC_COLOR
	participant ":EatMeParser" LOGIC_COLOR
	participant "acp:AddCommandParser" LOGIC_COLOR
	participant "ac:AddCommand" LOGIC_COLOR
	participant "cr:CommandResult" LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
	participant ":Model" MODEL_COLOR
	participant ":EateryList" MODEL_COLOR
end box

[-> ":LogicManager" : execute("add \\n..")
activate ":LogicManager"

":LogicManager" -> ":EatMeParser" : parseCommand("add \\n..")
activate ":EatMeParser"

create "acp:AddCommandParser"
":EatMeParser" -> "acp:AddCommandParser"
activate "acp:AddCommandParser"
"acp:AddCommandParser" --> ":EatMeParser"
deactivate "acp:AddCommandParser"

":EatMeParser" -> "acp:AddCommandParser" : parse("\\n..")
activate "acp:AddCommandParser"
ref over "acp:AddCommandParser" : create Eatery e

create "ac:AddCommand"
"acp:AddCommandParser" -> "ac:AddCommand"
activate "ac:AddCommand"
"ac:AddCommand" --> "acp:AddCommandParser" : ac
deactivate "ac:AddCommand"

"acp:AddCommandParser" --> ":EatMeParser" : ac
deactivate "acp:AddCommandParser"
destroy "acp:AddCommandParser"
deactivate ":EatMeParser"

":LogicManager" -> "ac:AddCommand" : execute()
activate "ac:AddCommand"
"ac:AddCommand" -> ":Model" : hasEatery(e)
activate ":Model"
":Model" -> ":EateryList" : hasEatery(e)
activate ":EateryList"
deactivate ":Model"
deactivate ":EateryList"

opt Eatery e does not exist
	"ac:AddCommand" -> ":Model" : addEatery(e)
	activate ":Model"
	":Model" -> ":EateryList" : addEatery(e)
	activate ":EateryList"
	deactivate ":Model"
	deactivate ":EateryList"
end

create "cr:CommandResult"
"ac:AddCommand" -> "cr:CommandResult"
activate "cr:CommandResult"
"cr:CommandResult" --> "ac:AddCommand" : cr
deactivate "cr:CommandResult"
"ac:AddCommand" --> ":LogicManager" : cr
deactivate "ac:AddCommand"
destroy "ac:AddCommand"


[<-- ":LogicManager"
@enduml
