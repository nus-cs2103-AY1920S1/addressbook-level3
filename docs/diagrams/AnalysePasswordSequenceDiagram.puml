@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PasswordBookParser" as PasswordBookParser LOGIC_COLOR
participant ":AnalysePasswordCommand" as AnalyseCommand LOGIC_COLOR
'participant ":DictionaryAnalyser" as DictionaryAnalyser LOGIC_COLOR
'participant "dictionary: Dictionary" as Dictionary LOGIC_COLOR
'participant ":DictionaryMatch" as DictionaryMatch LOGIC_COLOR
'participant ":DictionaryResult" as DictionaryResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":AnalysisReport" as AnalysisReport MODEL_COLOR
participant ":DictionaryAnalyser" as DictionaryAnalyser MODEL_COLOR
participant "dictionary: Dictionary" as Dictionary MODEL_COLOR
participant ":DictionaryMatch" as DictionaryMatch MODEL_COLOR
participant ":DictionaryResult" as DictionaryResult MODEL_COLOR
end box
[-> LogicManager : execute(analyse)
activate LogicManager

LogicManager -> PasswordBookParser : parseCommand(analyse)
activate PasswordBookParser

create AnalyseCommand
PasswordBookParser -> AnalyseCommand
activate AnalyseCommand

AnalyseCommand --> PasswordBookParser
deactivate AnalyseCommand

PasswordBookParser --> LogicManager
deactivate PasswordBookParser

LogicManager -> AnalyseCommand : execute()
activate AnalyseCommand

create AnalysisReport
AnalyseCommand -> AnalysisReport
activate AnalysisReport
AnalysisReport --> AnalyseCommand
deactivate AnalysisReport

AnalyseCommand -> AnalyseCommand : getRequiredAnalysers()
activate AnalyseCommand

create Dictionary
AnalyseCommand -> Dictionary
activate Dictionary
Dictionary --> AnalyseCommand : dictionary
deactivate Dictionary

create DictionaryAnalyser
AnalyseCommand -> DictionaryAnalyser
activate DictionaryAnalyser

DictionaryAnalyser --> AnalyseCommand
deactivate DictionaryAnalyser

AnalyseCommand --> AnalyseCommand : analysers
deactivate AnalyseCommand

    AnalyseCommand -> DictionaryAnalyser : analyse(passwordList)
    activate DictionaryAnalyser
       ref over DictionaryAnalyser, Dictionary, DictionaryResult : get result for each password
    DictionaryAnalyser --> AnalyseCommand : results
    deactivate DictionaryAnalyser
    AnalyseCommand -> AnalysisReport : write(a, results)
    activate AnalysisReport
    AnalysisReport --> AnalyseCommand
    deactivate AnalysisReport

AnalyseCommand --> LogicManager
deactivate AnalyseCommand
[<--LogicManager
deactivate LogicManager
@end
