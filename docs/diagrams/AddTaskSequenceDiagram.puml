@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TutorAidParser" as TutorAidParser LOGIC_COLOR
participant ":AddTaskCommandParser" as AddTaskCommandParser LOGIC_COLOR
participant "at:AddTaskCommand" as AddTaskCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("add_task c/....")
activate LogicManager

LogicManager -> TutorAidParser : parseCommand("add_task c/....")
activate TutorAidParser

create AddTaskCommandParser
TutorAidParser -> AddTaskCommandParser
activate AddTaskCommandParser

AddTaskCommandParser --> TutorAidParser
deactivate AddTaskCommandParser

TutorAidParser -> AddTaskCommandParser : parse("c/...")
activate AddTaskCommandParser

create AddTaskCommand
AddTaskCommandParser -> AddTaskCommand
activate AddTaskCommand

AddTaskCommand --> AddTaskCommandParser : at
deactivate AddTaskCommand

AddTaskCommandParser --> TutorAidParser : at
deactivate AddTaskCommand
'Hidden arrow to position the destroy marker below the end of the activation bar.
AddTaskCommandParser -[hidden]-> TutorAidParser
destroy AddTaskCommandParser

TutorAidParser --> LogicManager : at
deactivate TutorAidParser

LogicManager -> AddTaskCommand : execute()
activate AddTaskCommand

AddTaskCommand -> Model : hasTask(task)
activate Model
Model --> AddTaskCommand
deactivate Model

AddTaskCommand -> Model : addTask(task)
activate Model
Model --> AddTaskCommand
deactivate Model

create CommandResult
AddTaskCommand -> CommandResult
activate CommandResult

CommandResult --> AddTaskCommand
deactivate CommandResult

AddTaskCommand --> LogicManager : result
deactivate AddTaskCommand

[<--LogicManager
deactivate LogicManager
@enduml
