@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":BankAccountParser" as BankAccountParser LOGIC_COLOR
participant ":SortCommandParser" as SortCommandParser LOGIC_COLOR
participant "s:SortCommand" as SortCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":ReadOnlyBankAccount" as ReadOnlyBankAccount MODEL_COLOR
end box

[-> LogicManager : execute(sort amount)
activate LogicManager

LogicManager -> BankAccountParser : parseCommand(sort amount)
activate BankAccountParser

create SortCommandParser
BankAccountParser -> SortCommandParser
activate SortCommandParser

SortCommandParser --> BankAccountParser
deactivate SortCommandParser

BankAccountParser -> SortCommandParser : parse(sort amount)
activate SortCommandParser

create SortCommand
SortCommandParser -> SortCommand
activate SortCommand

SortCommand --> SortCommandParser
deactivate SortCommand

SortCommandParser --> BankAccountParser
deactivate SortCommandParser

SortCommandParser -[hidden]-> BankAccountParser
destroy SortCommandParser

BankAccountParser --> LogicManager : s
deactivate BankAccountParser

LogicManager -> SortCommand : execute()
activate SortCommand

SortCommand -> Model : getBankAccount()
activate Model

Model -> ReadOnlyBankAccount : getSortedTransactionHistory(comparator)
activate ReadOnlyBankAccount

ReadOnlyBankAccount --> Model : sortedTransactionHistory
deactivate ReadOnlyBankAccount

SortCommand -> Model : setTransactions(sortedTransactionHistory)
Model --> SortCommand

SortCommand -> Model : commitBankAccount()
Model --> SortCommand
deactivate Model

create CommandResult
SortCommand -> CommandResult
activate CommandResult

CommandResult -> SortCommand
deactivate CommandResult

SortCommand --> LogicManager : r
deactivate SortCommand
SortCommand -[hidden]-> LogicManager : r
destroy SortCommand

[<--LogicManager
deactivate LogicManager
@enduml
