@startuml
!include style.puml

box UI UI_COLOR_T1
participant ":UI" as UI UI_COLOR
end box

box AppManager APPMANAGER_COLOR_T1
participant ":AppManager" as AppManager APPMANAGER_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":GameCommand" as GameCommand LOGIC_COLOR_T2
end box

box ParserManager PARSERMANAGER_COLOR_T1
participant ":ParserManager" as ParserManager PARSERMANAGER_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR_T3
end box

box Storage STORAGE_COLOR_T1
participant ":Storage" as Storage STORAGE_COLOR_T2
end box

[-> UI : execute("guess zubat")
note left: this is the last guess
activate UI

UI -> AppManager : executeCommand\n("guess zubat")
activate AppManager

AppManager -> LogicManager : execute("guess zubat")
activate LogicManager

LogicManager -> ParserManager : parseCommand("guess zubat")
activate ParserManager

ParserManager --> LogicManager: command
deactivate ParserManager

create GameCommand
LogicManager -> GameCommand : command.execute()
activate GameCommand

GameCommand -> Model : update model
note left:gameCommandResult#isFinishedGame()\nindicates that the game is finished
GameCommand --> LogicManager: gameCommandResult
deactivate GameCommand

LogicManager --> AppManager: gameCommandResult
destroy GameCommand
deactivate LogicManager

AppManager -> AppManager: updateGameStatisticsBuilder\n(gameCommandResult)

activate AppManager

AppManager -> AppManager: addToGameStatisticsBuilder\n(gameCommandResult)
activate AppManager
deactivate AppManager

AppManager -> LogicManager: updateStatistics\n(gameStatistics)
note bottom: gameStatistics is produced\n by GameStatisticsBuilder#build()
activate LogicManager
LogicManager->Model: update model
LogicManager->Storage: saveWordBankStatistics()
LogicManager->Storage: saveGlobalStatistics()

deactivate AppManager
deactivate LogicManager


AppManager --> UI
deactivate AppManager

[<- UI : update\n UI Component


@enduml
