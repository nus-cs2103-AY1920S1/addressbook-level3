@startuml
!include style.puml

box UI UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
participant ":HistoryWindow" as HistoryWindow UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":Logic" as Logic LOGIC_COLOR
participant ":HistoryCommandParser" as HistoryCommandParser LOGIC_COLOR
participant "command : HistoryCommand" as HistoryCommand LOGIC_COLOR
participant "commandHistory :\nFilterOnlyCommandHistory" as CommandHistory LOGIC_COLOR
end box

-> MainWindow : executeCommand("history -o -s")
activate MainWindow

MainWindow -> Logic: execute("history -o -s")
activate Logic
Logic -> HistoryCommandParser: parse(" -o -s")
activate HistoryCommandParser
create HistoryCommand
HistoryCommandParser -> HistoryCommand
activate HistoryCommand
HistoryCommand --> HistoryCommandParser
deactivate HistoryCommand
HistoryCommandParser -> Logic: command
deactivate HistoryCommandParser
Logic -> HistoryCommand : execute(model, commandHistory)
activate HistoryCommand
HistoryCommand -> CommandHistory : updateFilteredCommandHistory(\nSHOW_ONLY_SUCCESSFUL)
activate CommandHistory
CommandHistory --> HistoryCommand : list filtered accordingly
deactivate CommandHistory
HistoryCommand -> Logic : commandResult
note right: showHistory and hideOutput\n flags in commandResult\n is set to true.
deactivate HistoryCommand

Logic -> MainWindow: commandResult
deactivate Logic

<- MainWindow: setFeedBackToUser("Displaying history window.")

MainWindow -> HistoryWindow : setHideOutputDisplay(true)
activate HistoryWindow
HistoryWindow --> MainWindow : Command feedbacks\nhidden
deactivate HistoryWindow

MainWindow -> HistoryWindow : show()
activate HistoryWindow


HistoryWindow -> HistoryWindow: scrollToBottom()
activate HistoryWindow
HistoryWindow --> HistoryWindow : scrolled to\nbottom of\ndisplay
deactivate HistoryWindow

HistoryWindow --> MainWindow : showing history \nwindow
deactivate HistoryWindow

<-- MainWindow: history command executed
deactivate MainWindow

destroy HistoryCommandParser
destroy HistoryCommand


@enduml
