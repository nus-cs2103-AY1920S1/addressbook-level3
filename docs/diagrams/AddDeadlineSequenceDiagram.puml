@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModuleBookParser" as ModuleBookParser LOGIC_COLOR
participant ":DeadlineCommandParser" as DeadlineCommandParser LOGIC_COLOR
participant ":AddDeadlineCommandParser" as AddDeadlineCommandParser LOGIC_COLOR
participant "a:AddDeadlineCommand" as AddDeadlineCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "deadline:Deadline" as Deadline MODEL_COLOR
end box

[-> LogicManager : execute(USER_INPUT)
activate LogicManager

LogicManager -> ModuleBookParser : parseCommand("deadline 1 a/add ..")
activate ModuleBookParser

create DeadlineCommandParser
ModuleBookParser -> DeadlineCommandParser
activate DeadlineCommandParser

DeadlineCommandParser --> ModuleBookParser
deactivate DeadlineCommandParser

ModuleBookParser -> DeadlineCommandParser : parse("MODULE_INDEX a/add... ")
activate DeadlineCommandParser

create AddDeadlineCommandParser
DeadlineCommandParser -> AddDeadlineCommandParser
activate AddDeadlineCommandParser

DeadlineCommandParser -> AddDeadlineCommandParser : parse("MODULE_INDEX a/add ...")

create Deadline
AddDeadlineCommandParser -> Deadline : Deadline(MODULE_INDEX, DESCRIPTION, TIME)
activate Deadline

Deadline --> AddDeadlineCommandParser : deadline
deactivate Deadline

create AddDeadlineCommand
AddDeadlineCommandParser -> AddDeadlineCommand : AddDeadlineCommand(MODULE_INDEX, deadline)
activate AddDeadlineCommand

AddDeadlineCommand --> AddDeadlineCommandParser : a
deactivate AddDeadlineCommand

AddDeadlineCommandParser --> DeadlineCommandParser: a
deactivate AddDeadlineCommandParser
AddDeadlineCommandParser -[hidden]-> DeadlineCommandParser
destroy AddDeadlineCommandParser

DeadlineCommandParser --> ModuleBookParser : a
deactivate DeadlineCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeadlineCommandParser -[hidden]-> ModuleBookParser
destroy DeadlineCommandParser

ModuleBookParser --> LogicManager : a
deactivate ModuleBookParser

LogicManager -> AddDeadlineCommand : execute()
activate AddDeadlineCommand

AddDeadlineCommand -> Model : showAllTrackedModules()
activate Model

Model -> Model : updateDisplayedList()
activate Model

Model --> Model
deactivate Model

AddDeadlineCommand -> Model : addDeadline(Deadline)
activate Model

Model --> AddDeadlineCommand
deactivate Model

AddDeadlineCommand -> Model : displayTrackedList()
activate Model

Model --> AddDeadlineCommand
deactivate Model

create CommandResult
AddDeadlineCommand -> CommandResult
activate CommandResult

CommandResult --> AddDeadlineCommand
deactivate CommandResult

AddDeadlineCommand --> LogicManager : result
deactivate AddDeadlineCommand

[<--LogicManager
deactivate LogicManager
@enduml
