@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Model{
Class HiddenModel #FFFFFF
}

package Logic {

    Class XYZCommand
    Class SimpleCommand
    Class CommandResult
    Class "{abstract}\nCommand" as Command

    Interface Parser <<Interface>>
    Class AlgoBaseParser
    Class XYZCommandParser
    Class CliSyntax
    Class ParserUtil
    Class ArgumentMultimap
    Class ArgumentTokenizer
    Class Prefix

    Interface Logic <<Interface>>
    Class LogicManager
}

Class HiddenOutside #FFFFFF
HiddenOutside .down.> Logic

LogicManager .right.|> Logic
LogicManager -down->"1" AlgoBaseParser
AlgoBaseParser ..> XYZCommandParser: creates >
XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer ..> ArgumentMultimap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil ..> Prefix
ArgumentTokenizer ..> Prefix
XYZCommand --|> Command
AlgoBaseParser ..> SimpleCommand
SimpleCommand --|> Command
LogicManager ..> Command : executes >

LogicManager --> Model
Command ..> Model
note left of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc
note left of SimpleCommand: SimpleCommand = ClearCommand, ExitCommand, \nListCommand, ListPlanCommand, ListTagCommand.
Logic ..> CommandResult
LogicManager ..> CommandResult
Command ..> CommandResult
CommandResult -[hidden]-> Parser
@enduml
